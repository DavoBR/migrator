name: CI
on:
  push:
    branches: [ master ]
    paths-ignore:
      - '.vscode/**'
      - '.github/**'
      - '**.gitignore'
      - '.metadata'
      - '.README.md'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - '.vscode/**'
      - '.github/**'
      - '**.gitignore'
      - '.metadata'
      - '.README.md'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - uses: actions/checkout@v2
        name: Checkout

      - name: Init env vars
        id: vars
        shell: python
        run: |
          srcBranch = '${{ github.head_ref || github.ref }}'.replace('refs/heads/', '').replace('/', '-')
          createArtifact = 'true' if srcBranch == 'master' or srcBranch == 'ci' else 'false'

          print(f'::set-output name=source_bracnh::{srcBranch}')
          print(f'::set-output name=create_artifact::{createArtifact}')

      - uses: mathieudutour/github-tag-action@v5
        name: Bump version and push tag
        id: tag_version
        with:
          github_token: ${{secrets.GITHUB_TOKEN}} 
          append_to_pre_release_tag: ${{steps.vars.outputs.source_branch}} 
          dry_run: ${{!contains(github.ref, 'master')}}

      - name: Define version
        id: vars2
        shell: python
        run: |
          import re 

          version = '${{steps.tag_version.outputs.new_version}}'
          match = re.search('(\d+)\.(\d+)\.(\d+)', version)
          semver = match.group(0)
          version = f'{semver}-${{steps.vars.outputs.source_branch}}'

          print(f'::set-output name=artifact_name::migrator-{version}-win-x64')

          filepath = './windows/runner/Runner.rc'
          
          print(f'::debug Define version in {filepath}')

          versionAsNumber = semver.replace('.', ',')
          versionAsString = version

          f = open(filepath, 'r')
          filedata = f.read()
          f.close()

          filedata = filedata.replace('VERSION_AS_NUMBER 1,0,0', f'VERSION_AS_NUMBER {versionAsNumber}')
          filedata = filedata.replace('VERSION_AS_STRING "1.0.0"', f'VERSION_AS_STRING "{versionAsString}"')

          f = open(filepath, 'w')
          f.write(filedata)
          f.close()
          
      - uses: actions/setup-java@v1
        name: Setup Java
        with:
          java-version: '12.x'     

      - uses: subosito/flutter-action@v1
        name: Setup Flutter
        with:
          channel: dev

      - run: flutter config --enable-windows-desktop
      - run: flutter pub get
      - run: flutter pub run build_runner build â€”delete-conflicting-outputs
      #- run: flutter test
      - run: flutter build windows

      - uses: actions/upload-artifact@v2
        name: Upload artifact
        with:
          name: ${{steps.vars2.outputs.artifact_name}}
          path: ${{github.workspace}}/build/windows/runner/Release/
        
      - uses: actions/create-release@v1
        name: Create Release
        id: create_release
        if: steps.vars.outputs.create_release == 'true'
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          draft: true
          tag_name: ${{steps.tag_version.outputs.new_tag}}
          release_name: Release ${{steps.tag_version.outputs.new_tag}}

      - uses: actions/download-artifact@v2
        name: Download artifact
        id: download
        if: steps.vars.outputs.create_release == 'true'
        with:
          name: ${{steps.vars2.outputs.artifact_name}}

      - uses: actions/upload-release-asset@v1
        name: Upload Release Asset
        if: steps.vars.outputs.create_release == 'true'
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}} 
          asset_path: ${{steps.download.outputs.download-path}}/${{steps.vars2.outputs.artifact_name}}.zip
          asset_name: ${{steps.vars2.outputs.artifact_name}}
          asset_content_type: application/zip
